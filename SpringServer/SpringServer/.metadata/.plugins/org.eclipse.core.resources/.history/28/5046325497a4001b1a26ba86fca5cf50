package com.server.database;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Primary;
import org.springframework.stereotype.Service;

import java.util.Optional;

@Primary
@Service
public class DataElementServiceImpl implements DataElementService {

	private final DataElementDao dataDao;
	
	@Autowired
	public DataElementServiceImpl(DataElementDao dDao) {
		this.dataDao = dDao;
	}
	
	
	@Override
	public List<DataElementWagons> getDataElementWagonsAll() {
		List<Optional<DataElementWagons>> wagons = this.dataDao.getDataElementWagonsAll();
		List<DataElementWagons> data = new ArrayList<DataElementWagons>();
		for(Optional<DataElementWagons> optional : wagons) {
			if(optional.isPresent())
				data.add(optional.get());
		}
		
		return data;
	}
	
	@Override
	public List<DataElementInvoices> getDataElementInvoicesAll() {
		List<Optional<DataElementInvoices>> invoices = this.dataDao.getDataElementInvoicesAll();
		List<DataElementInvoices> data = new ArrayList<DataElementInvoices>();
		for(Optional<DataElementInvoices> optional : invoices) {
			if(optional.isPresent())
				data.add(optional.get());
		}
		
		return data;
	}
	
	@Override
	public DataElementWagons getDataElementWagons(int numberWagon) {
		return this.dataDao.getDataElementWagonsByNumber(numberWagon)
				.orElseThrow(() -> new WagonNotFoundException(numberWagon));
	}

	@Override
	public void insertDataElementWagons(int numberWagon, String arrivalDate, String imagePath, double levelCorrectRecognize) {
		this.dataDao.insertDataElementWagons(numberWagon, arrivalDate, imagePath, levelCorrectRecognize);
	}

	@Override
	public DataElementInvoices getDataElementInvoices(String numberInvoices) {
		return this.dataDao.getDataElementInvoicesByNumber(numberInvoices)
				.orElseThrow(() -> new InvoiceNotFoundException(numberInvoices));
	}

	@Override
	public void insertDataElementInvoices(String numberInvoice, String nameSupplier, short totalWagons,
			String arrivalTrainDate, String departureTrainDate) {
		this.dataDao.insertDataElementInvoices(numberInvoice, nameSupplier, totalWagons, arrivalTrainDate, departureTrainDate);
	}

	@Override
	public void updateDataElementWagons(int numberWagon, String arrivalDate, String imagePath,
			double levelCorrectRecognize) {
		this.dataDao.updateDataElementWagons(numberWagon, arrivalDate, imagePath, levelCorrectRecognize);
	}

	@Override
	public void updateDataElementInvoices(String numberInvoice, String nameSupplier, short totalWagons,
			String arrivalTrainDate, String departureTrainDate) {
		this.dataDao.updateDataElementInvoices(numberInvoice, nameSupplier, totalWagons, arrivalTrainDate, departureTrainDate);
		
	}

	@Override
	public void deleteDataElementWagons(int numberWagon) {
		this.dataDao.deleteDataElementWagons(numberWagon);
	}

	@Override
	public void deleteDataElementInvoices(String numberInvoice) {
		this.dataDao.deleteDataElementInvoices(numberInvoice);
	}

	@Override
	public DataElementRegister getDataElementRegister(String fkNumberInvoice, int numberWagon) {
		try {
			return this.dataDao.getDataElementRegisterById(fkNumberInvoice, numberWagon)
					.orElseThrow(() -> new Exception("Error! Not founding element with {" +
			fkNumberInvoice + "; " + String.valueOf(numberWagon) + "}"));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}


	@Override
	public List<DataElementRegister> getDataElementRegisterAll() {
		// TODO Auto-generated method stub
		return null;
	}


	@Override
	public void insertDataElementRegister(String fkNumberInvoice, int numberWagon, short serialNumber, float sD) {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void deleteDataElementRegister(String fkNumberInvoice, int numberWagon) {
		// TODO Auto-generated method stub
		
	}
}
