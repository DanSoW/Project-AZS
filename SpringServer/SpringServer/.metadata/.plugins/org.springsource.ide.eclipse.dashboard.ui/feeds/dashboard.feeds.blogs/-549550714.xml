<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Spring</title>
  <link rel="alternate" href="https://spring.io/blog" />
  <link rel="self" href="https://spring.io/blog.atom" />
  <id>http://spring.io/blog.atom</id>
  <icon>https://spring.io/favicon.ico</icon>
  <updated>2021-04-27T22:41:00Z</updated>
  <entry>
    <title>This Week in Spring - April 27th, 2021</title>
    <link rel="alternate" href="https://spring.io/blog/2021/04/27/this-week-in-spring-april-27th-2021" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2021-04-27:4424</id>
    <updated>2021-04-27T22:41:00Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans! Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! We&amp;rsquo;ve got a &lt;em&gt;ton&lt;/em&gt; to get into, so let&amp;rsquo;s gooo!&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/JavaAtMicrosoft/status/1384914839005401095"&gt;Learn how to enable asynchronous messaging at cloud scale in Spring Boot Java apps using Java Message Service (JMS) API and Azure Service Bus. &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;In last week&amp;rsquo;s, &lt;a href="http://bootifulpodcast.fm"&gt;&lt;em&gt;A Bootiful Podcast&lt;/em&gt;,&lt;/a&gt; I talked to &lt;a href="https://spring.io/blog/2021/04/22/a-bootiful-podcast-reliably-ceo-russ-miles"&gt;Reliably CEO Russ Miles&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring-boot-cnb-hol-en.apps.pcfone.io/#0"&gt;An awesome hands-on-lab of using Cloud Native buildpacks with Spring Boot by Toshiaki Maki&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/ghillert/status/1385033192554389504?s=12"&gt;Check out Sam Brannan’s epic wiki page on meta programming with Spring&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/maciejwalkowiak/status/1385182840334258178"&gt;I love this utility for Google Chrome-using Spring Boot developers from Spring Cloud AWS contributor and legend Maciej Walkowiak: a tiny extension that points you to the current version of the Spring documentation.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.5.0-RC1"&gt;Check out the release notes for Spring Boot 2.5.0-RC1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/04/21/spring-cloud-hoxton-sr11-has-been-released"&gt;Spring Cloud Hoxton.SR11 has been released&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/04/20/what-s-new-in-spring-data-2021-0"&gt;What&amp;rsquo;s new in Spring Data 2021.0?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/microsoft/codetour"&gt;microsoft/codetour: VS Code extension that allows you to record and play back guided tours of codebases, directly within the editor.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/blog/2021/04/22/evolving-kubernetes-networking-with-the-gateway-api/"&gt;Blog: Evolving Kubernetes networking with the Gateway API&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/blog/2021/04/21/graceful-node-shutdown-beta/"&gt;Blog: Graceful Node Shutdown Goes Beta&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/blog/2021/04/23/kubernetes-release-1.21-metrics-stability-ga/"&gt;Blog: Kubernetes 1.21: Metrics Stability hits GA&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.mscharhag.com/java/vector-api"&gt;Looking into the JDK 16 vector API&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/JavaAtMicrosoft/status/1385285107708141573"&gt;Microsoft Build of OpenJDK 11.0.11 and 16.0.1 (EA) Now Available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.oracle.com/java/technologies/java-se-support-roadmap.html"&gt;Oracle Java SE Support Roadmap - Oracle is offering extended support for Java 8 until 2030&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blogs.oracle.com/javamagazine/mastering-the-mechanics-of-java-method-invocation"&gt;This is an interesting article by Ben Evans on how the JVM executes bytecode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>A Bootiful Podcast: Reliably CEO Russ Miles</title>
    <link rel="alternate" href="https://spring.io/blog/2021/04/22/a-bootiful-podcast-reliably-ceo-russ-miles" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2021-04-23:4423</id>
    <updated>2021-04-23T00:08:00Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans! In this episode, &lt;a href="https://twitter.com/starbuxman"&gt;Josh Long (@starbuxman)&lt;/a&gt; talks to Reliably CEO &lt;a href="https://twitter.com/russmiles"&gt;Russ Miles (@russmiles)&lt;/a&gt; about COVID, chaos engineering, reliable systems engineering and so much more.&lt;/p&gt;
&lt;iframe title="Reliably CEO Russ Miles" allowtransparency="true" height="150" width="100%" style="border: none; min-width: min(100%, 430px);" scrolling="no" data-name="pb-iframe-player" src="https://www.podbean.com/player-v2/?i=n6gjd-1017ea4-pb&amp;from=pb6admin&amp;download=1&amp;share=1&amp;download=1&amp;rtl=0&amp;fonts=Arial&amp;skin=1&amp;btn-skin=7"&gt;&lt;/iframe&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Hoxton.SR11 has been released</title>
    <link rel="alternate" href="https://spring.io/blog/2021/04/21/spring-cloud-hoxton-sr11-has-been-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Haytham Mohamed</name>
    </author>
    <id>tag:spring.io,2021-04-21:4422</id>
    <updated>2021-04-21T22:59:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the community, I am pleased to announce that the Service Release 11 (SR11) of the &lt;a href="https://cloud.spring.io"&gt;Spring Cloud Hoxton&lt;/a&gt; Release Train is available today. The release can be found in &lt;a href="https://repo1.maven.org/maven2/org/springframework/cloud/spring-cloud-dependencies/Hoxton.SR11/"&gt;Maven Central&lt;/a&gt;. You can check out the Hoxton &lt;a href="https://github.com/spring-cloud/spring-cloud-release/wiki/Spring-Cloud-Hoxton-Release-Notes"&gt;release notes for more information&lt;/a&gt;.&lt;/p&gt;&lt;h2&gt;&lt;a href="#notable-changes-in-the-hoxton-release-train" class="anchor" name="notable-changes-in-the-hoxton-release-train"&gt;&lt;/a&gt;Notable Changes in the Hoxton Release Train&lt;/h2&gt;
&lt;p&gt;See all issues included in this release &lt;a href="https://github.com/orgs/spring-cloud/projects/57"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This was primarily a bug fix and documentation release. Hoxton.SR11 is compatible with Spring Boot 2.3.x and 2.2.x.&lt;/p&gt;&lt;h3&gt;&lt;a href="#spring-cloud-commons" class="anchor" name="spring-cloud-commons"&gt;&lt;/a&gt;Spring Cloud Commons&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/spring-cloud/spring-cloud-commons/issues/873"&gt;Add LoadBalancerRequestTransformer for WebClient-backed load-balancing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;&lt;a href="#spring-cloud-gateway" class="anchor" name="spring-cloud-gateway"&gt;&lt;/a&gt;Spring Cloud Gateway&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/spring-cloud/spring-cloud-gateway/issues/2153"&gt;Adds support for evicting connections&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;&lt;a href="#spring-cloud-openfeign" class="anchor" name="spring-cloud-openfeign"&gt;&lt;/a&gt;Spring Cloud OpenFeign&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/spring-cloud/spring-cloud-openfeign/issues/530"&gt;Upgrade Feign to 10.12&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/spring-cloud/spring-cloud-openfeign/issues/486"&gt;Add support for Apache HC5&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/spring-cloud/spring-cloud-openfeign/pull/502"&gt;Support Pageable, Sort annotated as SpringQueryMap to use with RequestBody&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/spring-cloud/spring-cloud-openfeign/issues/493"&gt;Add &lt;code&gt;FeignClientProperties.FeignClientConfiguration.followRedirects&lt;/code&gt; property&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/spring-cloud/spring-cloud-openfeign/issues/357"&gt;Improve &lt;code&gt;SpringEncoder&lt;/code&gt; Charset determination&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/spring-cloud/spring-cloud-openfeign/issues/471"&gt;Support multiple qualifiers in &lt;code&gt;FeignClient&lt;/code&gt; annotation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;&lt;a href="#spring-cloud-config" class="anchor" name="spring-cloud-config"&gt;&lt;/a&gt;Spring Cloud Config&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/spring-cloud/spring-cloud-config/issues/1621"&gt;Support encoded URIs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;&lt;a href="#spring-cloud-circuitbreaker" class="anchor" name="spring-cloud-circuitbreaker"&gt;&lt;/a&gt;Spring Cloud CircuitBreaker&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/spring-cloud/spring-cloud-circuitbreaker/issues/94"&gt;Support Resilience4J Configuration Properties&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/spring-cloud/spring-cloud-circuitbreaker/issues/86"&gt;Support Resilience4J Bulkhead Module&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;&lt;a href="#spring-cloud-kubernetes" class="anchor" name="spring-cloud-kubernetes"&gt;&lt;/a&gt;Spring Cloud Kubernetes&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/spring-cloud/spring-cloud-kubernetes/issues/517"&gt;Spring Cloud Kubernetes DiscoveryClient Initialized With Health Indicator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;&lt;a href="#spring-cloud-consul" class="anchor" name="spring-cloud-consul"&gt;&lt;/a&gt;Spring Cloud Consul&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/spring-cloud/spring-cloud-consul/issues/583"&gt;Disable ribbon auto config if consul discovery disabled&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following modules were updated as part of Hoxton.SR11:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Module &lt;/th&gt;
      &lt;th&gt;Version &lt;/th&gt;
      &lt;th&gt;Issues&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Starter Build &lt;/td&gt;
      &lt;td&gt;Hoxton.SR11 &lt;/td&gt;
      &lt;td&gt;&amp;nbsp;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Netflix &lt;/td&gt;
      &lt;td&gt;2.2.8.RELEASE &lt;/td&gt;
      &lt;td&gt;(&lt;a href="https://github.com/spring-cloud/spring-cloud-netflix/milestone/101?closed=1"&gt;issues&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Openfeign &lt;/td&gt;
      &lt;td&gt;2.2.8.RELEASE &lt;/td&gt;
      &lt;td&gt;(&lt;a href="https://github.com/spring-cloud/spring-cloud-openfeign/milestone/35?closed=1"&gt;issues&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Config &lt;/td&gt;
      &lt;td&gt;2.2.8.RELEASE &lt;/td&gt;
      &lt;td&gt;(&lt;a href="https://github.com/spring-cloud/spring-cloud-config/milestone/90?closed=1"&gt;issues&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Gateway &lt;/td&gt;
      &lt;td&gt;2.2.8.RELEASE &lt;/td&gt;
      &lt;td&gt;(&lt;a href="https://github.com/spring-cloud/spring-cloud-gateway/milestone/50?closed=1"&gt;issues&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Gcp &lt;/td&gt;
      &lt;td&gt;1.2.8.RELEASE &lt;/td&gt;
      &lt;td&gt;&amp;nbsp;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Commons &lt;/td&gt;
      &lt;td&gt;2.2.8.RELEASE &lt;/td&gt;
      &lt;td&gt;(&lt;a href="https://github.com/spring-cloud/spring-cloud-commons/milestone/88?closed=1"&gt;issues&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Consul &lt;/td&gt;
      &lt;td&gt;2.2.7.RELEASE &lt;/td&gt;
      &lt;td&gt;(&lt;a href="https://github.com/spring-cloud/spring-cloud-consul/milestone/55?closed=1"&gt;issues&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Contract &lt;/td&gt;
      &lt;td&gt;2.2.7.RELEASE &lt;/td&gt;
      &lt;td&gt;(&lt;a href="https://github.com/spring-cloud/spring-cloud-contract/milestone/76?closed=1"&gt;issues&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Kubernetes &lt;/td&gt;
      &lt;td&gt;1.1.9.RELEASE &lt;/td&gt;
      &lt;td&gt;(&lt;a href="https://github.com/spring-cloud/spring-cloud-kubernetes/milestone/23?closed=1"&gt;issues&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Sleuth &lt;/td&gt;
      &lt;td&gt;2.2.8.RELEASE &lt;/td&gt;
      &lt;td&gt;(&lt;a href="https://github.com/spring-cloud/spring-cloud-sleuth/milestone/89?closed=1"&gt;issues&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Stream &lt;/td&gt;
      &lt;td&gt;Horsham.SR12 &lt;/td&gt;
      &lt;td&gt;&amp;nbsp;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Function &lt;/td&gt;
      &lt;td&gt;3.0.14.RELEASE &lt;/td&gt;
      &lt;td&gt;&amp;nbsp;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Bus &lt;/td&gt;
      &lt;td&gt;2.2.4.RELEASE &lt;/td&gt;
      &lt;td&gt;&amp;nbsp;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Circuit Breaker &lt;/td&gt;
      &lt;td&gt;1.0.5.RELEASE &lt;/td&gt;
      &lt;td&gt;&amp;nbsp;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Security &lt;/td&gt;
      &lt;td&gt;2.2.5.RELEASE &lt;/td&gt;
      &lt;td&gt;&amp;nbsp;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud ZooKeeper &lt;/td&gt;
      &lt;td&gt;2.2.5.RELEASE &lt;/td&gt;
      &lt;td&gt;(&lt;a href="https://github.com/spring-cloud/spring-cloud-zookeeper/milestone/35?closed=1"&gt;issues&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As always, we welcome feedback on &lt;a href="https://github.com/spring-cloud/"&gt;GitHub&lt;/a&gt;, on &lt;a href="https://gitter.im/spring-cloud/spring-cloud"&gt;Gitter&lt;/a&gt;, on &lt;a href="https://stackoverflow.com/questions/tagged/spring-cloud"&gt;Stack Overflow&lt;/a&gt;, or on &lt;a href="https://twitter.com/SpringCloud"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To get started with Maven with a BOM (dependency management only):&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint xml"&gt;&amp;lt;dependencyManagement&amp;gt;&#xD;
    &amp;lt;dependencies&amp;gt;&#xD;
        &amp;lt;dependency&amp;gt;&#xD;
            &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
            &amp;lt;artifactId&amp;gt;spring-cloud-dependencies&amp;lt;/artifactId&amp;gt;&#xD;
            &amp;lt;version&amp;gt;Hoxton.SR11&amp;lt;/version&amp;gt;&#xD;
            &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;&#xD;
            &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;&#xD;
        &amp;lt;/dependency&amp;gt;&#xD;
    &amp;lt;/dependencies&amp;gt;&#xD;
&amp;lt;/dependencyManagement&amp;gt;&#xD;
&amp;lt;dependencies&amp;gt;&#xD;
    &amp;lt;dependency&amp;gt;&#xD;
        &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
        &amp;lt;artifactId&amp;gt;spring-cloud-starter-config&amp;lt;/artifactId&amp;gt;&#xD;
    &amp;lt;/dependency&amp;gt;&#xD;
    &amp;lt;dependency&amp;gt;&#xD;
        &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
        &amp;lt;artifactId&amp;gt;spring-cloud-starter-netflix-eureka-client&amp;lt;/artifactId&amp;gt;&#xD;
    &amp;lt;/dependency&amp;gt;&#xD;
    ...&#xD;
&amp;lt;/dependencies&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or with Gradle:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint groovy"&gt;buildscript {&#xD;
  dependencies {&#xD;
    classpath &amp;quot;io.spring.gradle:dependency-management-plugin:1.0.10.RELEASE&amp;quot;&#xD;
  }&#xD;
}&#xD;
&#xD;
apply plugin: &amp;quot;io.spring.dependency-management&amp;quot;&#xD;
&#xD;
dependencyManagement {&#xD;
  imports {&#xD;
    mavenBom &amp;#39;org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR11&amp;#39;&#xD;
  }&#xD;
}&#xD;
&#xD;
dependencies {&#xD;
  compile &amp;#39;org.springframework.cloud:spring-cloud-starter-config&amp;#39;&#xD;
  compile &amp;#39;org.springframework.cloud:spring-cloud-starter-netflix-eureka-client&amp;#39;&#xD;
  //...&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>What's new in Spring Data 2021.0?</title>
    <link rel="alternate" href="https://spring.io/blog/2021/04/20/what-s-new-in-spring-data-2021-0" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Mark Paluch</name>
    </author>
    <id>tag:spring.io,2021-04-15:4418</id>
    <updated>2021-04-21T06:18:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;Spring Data 2021.0, codenamed Pascal, is the second release following the new six-month cadence.
It ships with refinements to many existing interfaces and programming models.
This blog post explains the following topics:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#delete-all-by-id"&gt;Introduce &lt;code&gt;deleteAllById&lt;/code&gt; for &lt;code&gt;CrudRepository&lt;/code&gt; and &lt;code&gt;ReactiveCrudRepository&lt;/code&gt;.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#jfr"&gt;Support for Spring Core Java Flight Recorder (JFR) metrics.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#query-by-example"&gt;&lt;code&gt;QueryByExample&lt;/code&gt; for R2DBC and Oracle support.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#kotlin"&gt;Enable Type- and Refactoring-safe Use of &lt;code&gt;KProperty&lt;/code&gt; and &lt;code&gt;KPropertyPath&lt;/code&gt; for Property Path Rendering.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#cassandra"&gt;Enable Cassandra Prepared Statements for Repositories and &lt;code&gt;CassandraTemplate&lt;/code&gt;.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#mongodb"&gt;Document Unwrapping Support &amp;amp; Relaxed Aggregation Type Checks for MongoDB.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Repository projections &amp;amp; function execution for Apache Geode.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#solr"&gt;Remove Spring Data Solr from the release train.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#jmolecules"&gt;Support for &lt;a href="https://github.com/xmolecules/jmolecules"&gt;jMolecules&lt;/a&gt;.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#spring-data-rest"&gt;Spring Data REST aggregate reference mapping in DTOs.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="delete-all-by-id"&gt;&lt;a class="anchor" href="#delete-all-by-id"&gt;&lt;/a&gt;Introduce &lt;code&gt;deleteAllById&lt;/code&gt; for &lt;code&gt;CrudRepository&lt;/code&gt; and &lt;code&gt;ReactiveCrudRepository&lt;/code&gt;&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Since its inception, &lt;code&gt;CrudRepository&lt;/code&gt; has defined a method to delete individual entities by their identifiers.
Back in the 1.x development line, &lt;code&gt;delete(…)&lt;/code&gt; methods were overloaded to accept various argument types following &lt;code&gt;delete(ID id)&lt;/code&gt; and &lt;code&gt;delete(Iterable&amp;lt;? extends T&amp;gt; entities)&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;With the Spring Data 2.0 release, we renamed the &lt;code&gt;CrudRepository&lt;/code&gt; methods to express what argument a particular method would accept. After the rename, the methods looked like &lt;code&gt;deleteById(ID id)&lt;/code&gt; and &lt;code&gt;deleteAll(Iterable&amp;lt;? extends T&amp;gt; entities)&lt;/code&gt;.
The refined naming convention allows for some room to introduce a delete method that deletes entities by their identifier.
As of this release, both, &lt;code&gt;CrudRepository&lt;/code&gt; and &lt;code&gt;ReactiveCrudRepository&lt;/code&gt; define &lt;code&gt;deleteAllById(Iterable&amp;lt;? extends ID&amp;gt; ids)&lt;/code&gt; to delete multiple entities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Depending on the actual store module, this can be a batch delete (delete by query) if supported by the data store.
The JPA implementation, for example, still materializes all entities first to immediately remove them, so that lifecycle callbacks are still invoked for the instances about to be deleted.
An additional &lt;code&gt;deleteAllByIdInBatch(…)&lt;/code&gt; has been introduced in &lt;code&gt;JpaRepoository&lt;/code&gt; to also provide the faster execution variant using a batch query.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="jfr"&gt;&lt;a class="anchor" href="#jfr"&gt;&lt;/a&gt;Support for Spring Core Java Flight Recorder (JFR) metrics&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="https://docs.oracle.com/javacomponents/jmc-5-5/jfr-runtime-guide/preface_jfrrt.htm#JFRRT165"&gt;Java Flight Recorder (JFR)&lt;/a&gt; is a tool to collect, diagnose, and profile data about a running Java application.
Its tight integration with the Java runtime allows low-overhead collection of events in production environments.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Spring Data repositories are typically bootstrapped on application startup, so they naturally contribute to startup time.
The Pascal release introduces integration with Spring Framework&amp;#8217;s support for capturing &lt;a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/core/metrics/jfr/FlightRecorderApplicationStartup.html"&gt;startup events&lt;/a&gt;, available since version 5.3.
By enabling JFR recording, you can collect and analyze the following repository startup events:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;strong&gt;For each enabled Spring Data module (&lt;code&gt;@Enable…Repositories&lt;/code&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;spring.data.repository.scanning&lt;/code&gt;: Repository interface scanning&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;strong&gt;For each Repository&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;spring.data.repository.init&lt;/code&gt;: Repository initialization&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;spring.data.repository.metadata&lt;/code&gt;: Metadata retrieval&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;spring.data.repository.composition&lt;/code&gt;: Assembly of the repository composition&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;spring.data.repository.target&lt;/code&gt;: Repository target creation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;spring.data.repository.proxy&lt;/code&gt;: Repository proxy creation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;spring.data.repository.postprocessors&lt;/code&gt;: Repository proxy post-processing&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;You can enable JFR recording by starting your application with &lt;code&gt;java -XX:StartFlightRecording:filename=recording.jfr,duration=10s -jar …&lt;/code&gt; on all Java 9 or newer runtimes or Java 8 update 262 or later.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="kotlin"&gt;&lt;a class="anchor" href="#kotlin"&gt;&lt;/a&gt;Type- and Refactoring-safe Use of &lt;code&gt;KProperty&lt;/code&gt; and &lt;code&gt;KPropertyPath&lt;/code&gt; for Property Path Rendering&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The Spring Data Kotlin integration is a strong driver for "syntactic sugar" enhancements of our language-specific extensions.
Kotlin allows referencing individual properties as property references (&lt;code&gt;data class Book(val title: String)&lt;/code&gt;, &lt;code&gt;Book::title&lt;/code&gt;). They are refactoring- and compile-safe, as the Kotlin compiler immediately rejects invalid references.
Modern IDE support considers property references when renaming a property, eliminating the risk of lingering references within plain strings.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="https://github.com/spring-projects/spring-data-mongodb/issues/3007"&gt;Spring Data MongoDB 2.2&lt;/a&gt; introduced support for &lt;code&gt;KProperty&lt;/code&gt; and &lt;code&gt;KPropertyPath&lt;/code&gt; for its &lt;code&gt;Criteria&lt;/code&gt; API&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;strong&gt;Classic usage of properties&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="kotlin"&gt;val classic = Criteria("title").isEqualTo("Moby-Dick")
  .and("price").lt(950)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="kotlin"&gt;val typed = (Book::title isEqualTo "Moby-Dick")
  .and(Book::price).lt(950)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Spring Data Commons 2.5 promotes &lt;code&gt;KPropertyPath&lt;/code&gt; as a top-level concept in Spring Data.
To not require extensions or changes to all methods that accept a property path,  you can use`KPropertyPath` with existing Spring Data utilities by rendering the property path:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="kotlin"&gt;// KPropertyPath variant
Sort.by((Book::author / Author::name).toDotPath())

// String-path equivalent
Sort.by("author.name")

// KPropertyPath variant
ExampleMatcher.matching()
  .withMatcher((Book::author / Author::name).toDotPath(), contains())

// String-path equivalent
ExampleMatcher.matching()
  .withMatcher("author.name", contains())&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="solr"&gt;&lt;a class="anchor" href="#solr"&gt;&lt;/a&gt;Removal of Spring Data for Apache Solr from the Release Train&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This release train no longer ships with Spring Data for Apache Solr. After &lt;a href="https://spring.io/blog/2020/04/07/spring-data-for-apache-solr-discontinued"&gt;deprecating Spring Data Solr in 2020&lt;/a&gt;, the team has decided to discontinue maintenance of the Solr module.
However, we are going to keep shipping service releases for the maintained 4.2 and 4.3 development lines until they reach their end of life in May 2021 and November 2021, respectively.
Moving forward, we recommend using &lt;a href="https://github.com/spring-projects/spring-data-elasticsearch/"&gt;Spring Data Elasticsearch&lt;/a&gt; as the Spring Data module of choice for full-text search arrangements.
Spring Data Elasticsearch is an actively maintained community module.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="query-by-example"&gt;&lt;a class="anchor" href="#query-by-example"&gt;&lt;/a&gt;&lt;code&gt;QueryByExample&lt;/code&gt; for R2DBC and Oracle support&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#query-by-example"&gt;Query by Example&lt;/a&gt; is a user-friendly querying technique with a simple interface.
It allows dynamic query creation and does not require writing queries that contain field names.
In fact, Query by Example does not require you to write queries by using SQL at all.
It is available for multiple Spring Data modules.
As of Spring Data R2DBC 1.3, you can query relational data by using examples through Spring Data R2DBC&amp;#8217;s implementation of &lt;code&gt;ReactiveQueryByExampleExecutor&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;PersonRepository people  = …;
DatabaseClient client = …;

var skyler = new Person(null, "Skyler", "White", 45);
var walter = new Person(null, "Walter", "White", 50);
var flynn = new Person(null, "Walter Jr. (Flynn)", "White", 17);
var marie = new Person(null, "Marie", "Schrader", 38);
var hank = new Person(null, "Hank", "Schrader", 43);

var example = Example.of(new Person(null, null, "White", null));

people.count(example).as(StepVerifier::create)
  .expectNext(3L)
  .verifyComplete();


var example = Example.of(new Person(null, "Walter", "WHITE", null), matching()
  .withIgnorePaths("age"). //
  .withMatcher("firstname", startsWith())
  .withMatcher("lastname", ignoreCase()));

people.findAll(example).collectList()
  .as(StepVerifier::create)
  .consumeNextWith(actual -&amp;gt; {
    assertThat(actual).containsExactlyInAnyOrder(flynn, walter);
  })
  .verifyComplete();&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Alongside other improvements, you can use Spring Framework 5.3.6 and Spring Data R2DBC 1.3 with Oracle&amp;#8217;s &lt;a href="https://github.com/oracle/oracle-r2dbc"&gt;&lt;code&gt;oracle-r2dbc&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;com.oracle.database.r2dbc:oracle-r2dbc&lt;/code&gt;) driver. Creating &lt;code&gt;DatabaseClient&lt;/code&gt; or &lt;code&gt;R2dbcEntityTemplate&lt;/code&gt; by using the Oracle &lt;code&gt;ConnectionFactory&lt;/code&gt; selects the appropriate bind marker strategy and dialect.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="cassandra"&gt;&lt;a class="anchor" href="#cassandra"&gt;&lt;/a&gt;Enabling Cassandra Prepared Statements for Repositories and &lt;code&gt;CassandraTemplate&lt;/code&gt;&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Spring Data for Apache Cassandra accommodates for Cassandra-specific features wherever possible.
Since its major rewrite in version 2.0, we introduced &lt;a href="https://docs.spring.io/spring-data/cassandra/docs/current/api/org/springframework/data/cassandra/core/cql/support/CachedPreparedStatementCreator.html"&gt;&lt;code&gt;CachedPreparedStatementCreator&lt;/code&gt;&lt;/a&gt; for prepared statement caching on the &lt;code&gt;CqlTemplate&lt;/code&gt; level, which allowed the use of prepared statements using plain CQL.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;With this release, we bring prepared statement support on &lt;code&gt;CassandraTemplate&lt;/code&gt; and its reactive and asynchronous variants.
In fact, prepared statements are enabled by default. The main difference between &lt;code&gt;CqlTemplate&lt;/code&gt; and &lt;code&gt;CassandraTemplate&lt;/code&gt; is the abstraction level and the responsibility of CQL statement creation. &lt;code&gt;CqlTemplate&lt;/code&gt; requires CQL as input. &lt;code&gt;CassandraTemplate&lt;/code&gt; uses entities as input and generates CQL statements based on the actual action that should be performed using the entity.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The change to provide prepared statement functionality comes with a few changes when issuing queries:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="olist arabic"&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;
&lt;p&gt;Parameters are bound by index when using &lt;code&gt;StatementBuilder&lt;/code&gt;. &lt;code&gt;StatementBuilder&lt;/code&gt; is used in all arrangements when building CQL queries for entity-related operations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When binding parameters by index, inspecting a &lt;code&gt;SimpleStatement&lt;/code&gt; renders parameter bind markers within its CQL. CQL logging of &lt;code&gt;CqlTemplate&lt;/code&gt; is affected by this change as well: The logged CQL contains now &lt;code&gt;?&lt;/code&gt; instead of the literal value.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;These changes are required to allow statement preparation of parameterized statements.
A statement to run is first prepared. Then, in a second step, it is bound with its actual parameters and then sent to the server for execution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Cassandra&amp;#8217;s Java driver keeps track of prepared statement caching, so no work is required in terms of bean setup.
Generally, you should experience a better query performance.
Also, keep in mind that prepared statement caching requires additional memory to keep track of the prepared statement.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;You can disable prepared statement usage on &lt;code&gt;CassandraTemplate&lt;/code&gt; and its reactive and asynchronous variants:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;var template = new CassandraTemplate(session);
template.setUsePreparedStatements(false);&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;You can find more detail in the &lt;a href="https://docs.spring.io/spring-data/cassandra/docs/current/reference/html/#cassandra.template.prepared-statements"&gt;Spring Data for Apache Cassandra reference documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="mongodb"&gt;&lt;a class="anchor" href="#mongodb"&gt;&lt;/a&gt;Document Unwrapping Support &amp;amp; Relaxed Aggregation Type Checks for MongoDB&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Value objects and record types help us create clearly structured domain models with maximum expressiveness.
However, persisting those finely crafted models does not necessarily lead to a well-structured database document.
What looks good in Java or Kotlin may cause unintended repetition of property names and deeply nested structures in the MongoDB native Document format that embeds entities within their parent structure.
Consider the following trivial snippet and its representation:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;class User {
  private String id;
  private Email email;
  // …
}

record Email (String email) {}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="json"&gt;{
  "_id" : "9708-ac32-beb0",
  "email" : {
    "email" : "me@home.somewhere"
  },
  // …
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Although this works, it is obviously not an idiomatic representation for a document store, and that is exactly where &lt;code&gt;@Unwrapped&lt;/code&gt; comes into play.
The annotation lets you flatten out (unwrap) a property into its parent:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt; class User {
  private String id;
  @Unwrapped(onEmpty = OnEmpty.USE_NULL)
  private Email email;
  // …
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;code&gt;@Unwrapped&lt;/code&gt; forces you to make a decision about how nonexistent values are treated by choosing an &lt;code&gt;onEmpty&lt;/code&gt; (none of the fields represented by the record is present) behavior.
For those of you who prefer less verbose annotations, feel free to use &lt;code&gt;@Unwrapped.Nullable&lt;/code&gt; as an alternative or to create your own annotation by using &lt;code&gt;@Unwrapped&lt;/code&gt; as a meta annotation.
Either way, the resulting document looks much more appealing:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="json"&gt;{
  "_id" : "9708-ac32-beb0",
  "email" : "me@home.somewhere",
  // …
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Both repositories and &lt;code&gt;MongoTemplate&lt;/code&gt; are able to deal with unwrapped properties.
See the &lt;a href="https://docs.spring.io/spring-data/mongodb/docs/3.2.0/reference/html/#unwrapped-entities"&gt;reference documentation&lt;/a&gt; for more information. Also, check out the &lt;a href="https://github.com/spring-projects/spring-data-examples/blob/211d1440a26eebe407ae044eca4f7318232299b8/mongodb/example/src/test/java/example/springdata/mongodb/unwrapping/UnwrappingIntegrationTests.java"&gt;examples for &lt;code&gt;@Unwrapped&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="jmolecules"&gt;&lt;a class="anchor" href="#jmolecules"&gt;&lt;/a&gt;Support for jMolecules&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The Spring Data repository abstraction has always been a core concept within the project.
It is a programming model for an architectural concept coined in Domain-Driven Design (DDD): the repository abstracts a collection of aggregates.
In fact, Spring Framework itself aligns with a few other abstractions originating in DDD (such as services) and provides annotations to express them in user code.
However, users often do not like to use framework-specific annotations and abstractions to express those concepts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The &lt;a href="https://github.com/xmolecules/jmolecules"&gt;jMolecules&lt;/a&gt; project focuses solely on providing annotation and type-based abstractions with which different architectural concepts for technology can integrate.
It essentially inverts the relationship: user code depends only on jMolecules annotations and interfaces, and technology integration is then provided&amp;#8201;&amp;#8212;&amp;#8201;in a second step&amp;#8201;&amp;#8212;&amp;#8201;either from &lt;a href="https://github.com/xmolecules/jmolecules-integrations"&gt;the extensive jMolecules integrations library&lt;/a&gt; or the frameworks themselves.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="sect2"&gt;
&lt;h3 id="modeling-associations"&gt;&lt;a class="anchor" href="#modeling-associations"&gt;&lt;/a&gt;Modeling Associations&lt;/h3&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;One of the core abstractions in the Domain-Driven Design module of jMolecules is the &lt;code&gt;Association&lt;/code&gt; interface.
It is typed to an &lt;code&gt;AggregateRoot&lt;/code&gt; as well as its &lt;code&gt;Identifier&lt;/code&gt; and is used in domain models to express a relationship to an aggregate in a strongly typed way:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;class Order implements AggregateRoot&amp;lt;Order, OrderIdentifier&amp;gt; {

  OrderIdentifier id;
  Association&amp;lt;Customer, CustomerIdentifier&amp;gt; customer;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Both &lt;code&gt;Order&lt;/code&gt; and &lt;code&gt;Customer&lt;/code&gt; are aggregates in this model, and the association between the two is explicitly mapped through the jMolecules &lt;code&gt;Association&lt;/code&gt; type.
Spring Data 2021.0.0 ships mapping support for &lt;code&gt;Association&lt;/code&gt;s.
They are properly detected as Spring Data associations and converted by using the identifier backing the instance.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;To transparently enable the support for those abstractions, add &lt;code&gt;org.jmolecules.integrations:jmolecules-spring&lt;/code&gt; to your classpath.
Spring Data&amp;#8217;s mapping infrastructure detects that and automatically registers the necessary converters in the conversion parts of our object mapping facilities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Support for &lt;code&gt;Association&lt;/code&gt; instances is also provided for JPA. However, in this case, Spring Data does not provide the actual translation, which is provided through integration with &lt;code&gt;AttributeConverter&lt;/code&gt; implementations provided by jMolecules itself.
Using &lt;a href="https://github.com/xmolecules/jmolecules-integrations/tree/main/jmolecules-bytebuddy#reduce-boilerplate-for-aggregateroot-implementations"&gt;its ByteBuddy extension&lt;/a&gt; you can generate the necessary &lt;code&gt;AttributeConverter&lt;/code&gt; implementations and annotation configuration.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect2"&gt;
&lt;h3 id="mapping-between-identifiers-and-aggregate-instances"&gt;&lt;a class="anchor" href="#mapping-between-identifiers-and-aggregate-instances"&gt;&lt;/a&gt;Mapping between identifiers and aggregate instances&lt;/h3&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;jMolecules' &lt;code&gt;Identifier&lt;/code&gt; interface incentivizes the use of dedicated identifier types for aggregates, as in the &lt;code&gt;OrderIdentifier&lt;/code&gt; and &lt;code&gt;CustomerIdentifier&lt;/code&gt; type used in the earlier example.
When serializing the &lt;code&gt;Association&lt;/code&gt;, we now effectively have to translate the instance into a &lt;code&gt;CustomerIdentifier&lt;/code&gt; by calling &lt;code&gt;Association.getId()&lt;/code&gt; and &lt;code&gt;Identifier.getId()&lt;/code&gt; in turn to get to the value to actually persist.
To materialize the association, we have to take the raw persisted value, create a &lt;code&gt;CustomerIdentifier&lt;/code&gt; instance by using an exposed, static factory method named &lt;code&gt;….of(…)&lt;/code&gt; and eventually call &lt;code&gt;Association.of(…)&lt;/code&gt; again.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;All these translation steps are implemented in &lt;a href="https://github.com/xmolecules/jmolecules-integrations"&gt;&lt;code&gt;jmolecules-integrations&lt;/code&gt;&lt;/a&gt; and transparently added by Spring Data to the Spring &lt;code&gt;ConversionService&lt;/code&gt; for use by the framework.
Assuming the &lt;code&gt;OrderIdentifier&lt;/code&gt; is backed by a &lt;code&gt;String&lt;/code&gt; representation of a &lt;code&gt;UUID&lt;/code&gt;, that also means that Spring Data&amp;#8217;s &lt;code&gt;DomainClassConverter&lt;/code&gt; is able to automatically bind a fully materialized aggregate instance to a Spring MVC controller method:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;@RestController
class MyController {

  @GetMapping("/orders/{id}")
  HttpEntity&amp;lt;?&amp;gt; getOrders(@PathVariable("id") Order order) { /* … */ }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;In this example, a GET request to &lt;code&gt;/orders/462a692d-…&lt;/code&gt; automatically translates &lt;code&gt;462a692d-…&lt;/code&gt; into an &lt;code&gt;OrderIdentifier&lt;/code&gt; by using the jMolecules converters first and then using the repository declared for &lt;code&gt;Order&lt;/code&gt; to look up the aggregate instance.
While the &lt;a href="https://docs.spring.io/spring-data/commons/docs/current/reference/html/#core.web.basic.domain-class-converter"&gt;general mechanism&lt;/a&gt; has been available for quite a while in Spring Data, the 2021.0.0 release adds the necessary, additional integration for jMolecules &lt;code&gt;Identifier&lt;/code&gt; implementations.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="spring-data-rest"&gt;&lt;a class="anchor" href="#spring-data-rest"&gt;&lt;/a&gt;Spring Data REST Aggregate Reference Mapping for DTOs&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The previously mentioned jMolecules &lt;code&gt;Converter&lt;/code&gt; implementations are also used in all places in which Spring Data REST needs to obtain and transform aggregate identifiers into URIs.
The module also ships with a new Jackson deserializer that allows binding Spring Data REST managed aggregate instances into DTOs by deserializing URIs properly.
Assume you have &lt;code&gt;Order&lt;/code&gt; managed by Spring Data REST and exposed through &lt;code&gt;/orders/…&lt;/code&gt; and a customer controller arrangement that looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;@BasePathAwareController
class MyCustomController {

  @PostMapping("/orders")
  HttpEntity&amp;lt;?&amp;gt; postOrder(@RequestBody MyDto payload) {
    /* Process submission */
  }
}

@Data
class MyDto {
  List&amp;lt;Order&amp;gt; orders;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Now also assume the following payload submitted for the request:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="json"&gt;{
  "orders" : [
    "…/orders/462a692d-…"
  ]
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Despite &lt;code&gt;MyDto&lt;/code&gt; being an ordinary data transfer object, the &lt;code&gt;payload&lt;/code&gt; instance contains the aggregate instance identified by &lt;code&gt;462a692d-…&lt;/code&gt; as an element of the &lt;code&gt;orders&lt;/code&gt; link.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - April 20th, 2021</title>
    <link rel="alternate" href="https://spring.io/blog/2021/04/20/this-week-in-spring-april-20th-2021" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2021-04-20:4421</id>
    <updated>2021-04-20T07:26:00Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans! Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! This week we&amp;rsquo;ve got a ton of stuff to get to so let&amp;rsquo;s dive right in! &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?app=desktop&amp;v=DD_Q4jGJsZ0"&gt;5 WAYS to go to PRODUCTION with SPRING BOOT (ft. surprise guest)! - YouTube&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/04/15/a-bootiful-podcast-biden-campaign-cto-spinnaker-cofounder-target-distinguished-engineer-and-all-around-epic-guy-dan-woods"&gt;A Bootiful Podcast: Biden campaign CTO, Spinnaker cofounder, Target distinguished engineer, and all around epic guy Dan Woods&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/ghillert/status/1382258134232690688?s=12"&gt;A cool sample Spring Boot app from Oracle&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/odrotbohm/status/1382386586705391617?s=12"&gt;A nice blog on Spring HATEOAS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/asirselvasingh/status/1382002413846945797?s=12"&gt;An interesting use case with Azure Spring Cloud and SwissRe&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/blog/2021/04/20/annotating-k8s-for-humans/"&gt;Blog: Annotating Kubernetes Services for Humans&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/blog/2021/04/20/defining-networkpolicy-conformance-cni-providers/"&gt;Blog: Defining Network Policy Conformance for Container Network Interface (CNI) providers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/blog/2021/04/19/introducing-indexed-jobs/"&gt;Blog: Introducing Indexed Jobs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/blog/2021/04/14/local-storage-features-go-beta/"&gt;Blog: Local Storage: Storage Capacity Tracking, Distributed Provisioning and Generic Ephemeral Volumes hit Beta&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/blog/2021/04/15/three-tenancy-models-for-kubernetes/"&gt;Blog: Three Tenancy Models For Kubernetes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/blog/2021/04/16/volume-health-monitoring-alpha-update/"&gt;Blog: Volume Health Monitoring Alpha Update&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ZlgwVIBUU9M&amp;list=PLgGXSWYM2FpPw8rV0tZoMiJYSCiLhPnOc&amp;index=1"&gt;Bootiful Cassandra with DataStax&amp;rsquo;s Patrick McFadin, Cedrick Lunven, and Spring&amp;rsquo;s Josh Long - YouTube&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://vinsguru.medium.com/choreography-saga-pattern-with-spring-boot-microservice-design-patterns-fb35a1802bee"&gt;Choreography Saga Pattern With Spring Boot — Microservice Design Patterns | by Vinoth Selvaraj | Medium&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=pzT1Iq4Vmo0&amp;t=2249s"&gt;Efficient web apps with Spring Boot | Stephane Nicoll and Brian Clozel ( Spring Committers) - YouTube&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://devxconf.org/#speakers"&gt;I&amp;rsquo;m so excited to be presenting at the first DevX Conf along such luminaries as Jason Warner, Erich Gamma, Ellen Chisa, and more. Please join me on April 28-29, 2021!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/04/13/introducing-spring-cloud-square"&gt;Introducing Spring Cloud Square&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://jackson.sh/posts/2021-04-java-underrated/"&gt;Java is criminally underhyped&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/msdev/status/1382091230008512519?s=12"&gt;Microsoft developer tweet about upcoming webinar&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/04/15/spring-boot-2-3-10-is-now-available"&gt;Spring Boot 2.3.10 is now available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/04/15/spring-boot-2-4-5-available-now"&gt;Spring Boot 2.4.5 available now&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/04/15/spring-boot-2-5-0-rc1-available-now"&gt;Spring Boot 2.5.0-RC1 available now&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/04/14/spring-data-2021-0-goes-ga"&gt;Spring Data 2021.0 goes GA&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/04/14/spring-data-neumann-sr9-and-2020-0-8-available"&gt;Spring Data Neumann SR9 and 2020.0.8 available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/04/13/spring-framework-5-3-6-and-5-2-14-available-now"&gt;Spring Framework 5.3.6 and 5.2.14 available now&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/04/14/spring-integration-5-5-rc1-5-4-6-5-3-7-available"&gt;Spring Integration 5.5 RC1, 5.4.6 &amp;amp; 5.3.7 Available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/04/14/spring-for-apache-kafka-2-7-0-available"&gt;Spring for Apache Kafka 2.7.0 Available&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Boot 2.5.0-RC1 available now</title>
    <link rel="alternate" href="https://spring.io/blog/2021/04/15/spring-boot-2-5-0-rc1-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>Phil Webb</name>
    </author>
    <id>tag:spring.io,2021-04-16:4420</id>
    <updated>2021-04-16T03:50:00Z</updated>
    <content type="html">&lt;p&gt;In preparation for the GA release on May 20 2021, I am pleased to announce that Spring Boot 2.5.0-RC1 has been released and is available from our &lt;a href="https://repo.spring.io/milestone/"&gt;milestone repository&lt;/a&gt;. This release &lt;a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.5.0-RC1"&gt;adds a number of new features and bug fixes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Highlights of the RC include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A new actuator endpoint for Quartz&lt;/li&gt;
  &lt;li&gt;Support for database initialization with R2DBC&lt;/li&gt;
  &lt;li&gt;Micometer metrics support for Spring Data repositories and MongoDB&lt;/li&gt;
  &lt;li&gt;Support for Gradle 7.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For a complete list of changes and upgrade instructions, please see the &lt;a href="https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.5.0-RC1-Release-Notes"&gt;Spring Boot 2.5.0-RC1 Release Notes&lt;/a&gt; on the wiki and the &lt;a href="https://docs.spring.io/spring-boot/docs/2.5.0-RC1/reference/html/"&gt;updated reference documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to get started with 2.5 and try out the new features, you can bootstrap a new project on &lt;a href="https://start.spring.io/#!type=maven-project&amp;language=java&amp;platformVersion=2.5.0.RC1&amp;packaging=jar&amp;jvmVersion=11&amp;groupId=com.example&amp;artifactId=demo&amp;name=demo&amp;description=Demo%20project%20for%20Spring%20Boot&amp;packageName=com.example.demo"&gt;start.spring.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spring.io/projects/spring-boot/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;Issues&lt;/a&gt; | &lt;a href="https://docs.spring.io/spring-boot/docs/2.5.0-M2/reference/html/"&gt;Documentation&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-boot"&gt;Stack Overflow&lt;/a&gt; | &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>A Bootiful Podcast: Biden campaign CTO, Spinnaker cofounder, Target distinguished engineer, and all around epic guy Dan Woods</title>
    <link rel="alternate" href="https://spring.io/blog/2021/04/15/a-bootiful-podcast-biden-campaign-cto-spinnaker-cofounder-target-distinguished-engineer-and-all-around-epic-guy-dan-woods" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2021-04-16:4419</id>
    <updated>2021-04-16T02:51:00Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans! In this installment &lt;a href="https://twitter.com/starbuxman"&gt;Josh Long (@starbuxman)&lt;/a&gt; talks to Netflixer, Spinnaker continuous delivery platform co-founder, Target distinguished engineer, Biden campaign CTO, RatPack contributor, and an all-around epic guy &lt;a href="https://twitter.com/danveloper"&gt;Dan Woods (@danveloper)&lt;/a&gt;. &lt;/p&gt;
&lt;iframe title="Biden campaign CTO, Spinnaker cofounder, Target distinguished engineer, and all around epic guy Dan Woods" allowtransparency="true" height="150" width="100%" style="border: none; min-width: min(100%, 430px);" scrolling="no" data-name="pb-iframe-player" src="https://www.podbean.com/player-v2/?i=bksh7-100d738-pb&amp;from=pb6admin&amp;download=1&amp;share=1&amp;download=1&amp;rtl=0&amp;fonts=Arial&amp;skin=1&amp;btn-skin=7"&gt;&lt;/iframe&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Boot 2.4.5 available now</title>
    <link rel="alternate" href="https://spring.io/blog/2021/04/15/spring-boot-2-4-5-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>St?phane Nicoll</name>
    </author>
    <id>tag:spring.io,2021-04-15:4417</id>
    <updated>2021-04-15T12:45:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and everyone who has contributed, I&amp;rsquo;m happy to announce that Spring Boot &lt;code&gt;2.4.5&lt;/code&gt; has been released and is now available from Maven Central.&lt;/p&gt;
&lt;p&gt;This release includes &lt;a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.4.5"&gt;57 bug fixes, documentation improvements, and dependency upgrades&lt;/a&gt;. Thanks to all those who have contributed with issue reports and pull requests.&lt;/p&gt;&lt;h3&gt;&lt;a href="#how-can-you-help" class="anchor" name="how-can-you-help"&gt;&lt;/a&gt;How can you help?&lt;/h3&gt;
&lt;p&gt;If you&amp;rsquo;re interested in helping out, check out the &lt;a href="https://github.com/spring-projects/spring-boot/labels/status%3A%20ideal-for-contribution"&gt;&amp;ldquo;ideal for contribution&amp;rdquo; tag&lt;/a&gt; in the issue repository. If you have general questions, please ask on &lt;a href="http://stackoverflow.com"&gt;stackoverflow.com&lt;/a&gt; using the &lt;a href="http://stackoverflow.com/tags/spring-boot"&gt;&lt;code&gt;spring-boot&lt;/code&gt; tag&lt;/a&gt; or chat with the community on &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spring.io/projects/spring-boot/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-boot/docs/2.4.5/reference/html"&gt;Documentation&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-boot"&gt;Stack Overflow&lt;/a&gt; | &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Boot 2.3.10 is now available</title>
    <link rel="alternate" href="https://spring.io/blog/2021/04/15/spring-boot-2-3-10-is-now-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Andy Wilkinson</name>
    </author>
    <id>tag:spring.io,2021-04-15:4416</id>
    <updated>2021-04-15T07:37:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and everyone who has contributed, I&amp;rsquo;m happy to announce that Spring Boot 2.3.10 has been released and is now available from Maven Central.&lt;/p&gt;
&lt;p&gt;This release includes &lt;a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.3.10.RELEASE"&gt;78 bug fixes, documentation improvements, and dependency upgrades&lt;/a&gt;. Thanks to all those who have contributed with issue reports and pull requests.&lt;/p&gt;&lt;h3&gt;&lt;a href="#how-can-you-help" class="anchor" name="how-can-you-help"&gt;&lt;/a&gt;How can you help?&lt;/h3&gt;
&lt;p&gt;If you&amp;rsquo;re interested in helping out, check out the &lt;a href="https://github.com/spring-projects/spring-boot/labels/status%3A%20ideal-for-contribution"&gt;&amp;ldquo;ideal for contribution&amp;rdquo; tag&lt;/a&gt; in the issue repository. If you have general questions, please ask on &lt;a href="http://stackoverflow.com"&gt;stackoverflow.com&lt;/a&gt; using the &lt;a href="http://stackoverflow.com/tags/spring-boot"&gt;&lt;code&gt;spring-boot&lt;/code&gt; tag&lt;/a&gt; or chat with the community on &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spring.io/projects/spring-boot/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-boot/docs/2.3.10.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-boot"&gt;Stack Overflow&lt;/a&gt; | &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Integration 5.5 RC1, 5.4.6 &amp; 5.3.7 Available</title>
    <link rel="alternate" href="https://spring.io/blog/2021/04/14/spring-integration-5-5-rc1-5-4-6-5-3-7-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Artem Bilan</name>
    </author>
    <id>tag:spring.io,2021-04-15:4415</id>
    <updated>2021-04-15T01:52:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;Dear Spring community,&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;On behalf of the team and all the contributors, it&amp;#8217;s my pleasure to announce a &lt;code&gt;Release Candidate 1&lt;/code&gt; for Spring Integration &lt;code&gt;5.5&lt;/code&gt;, plus Spring Integration &lt;code&gt;5.4.6&lt;/code&gt; &amp;amp; &lt;code&gt;5.3.7&lt;/code&gt; patch versions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The latest two can be downloaded from Maven Central and it is recommended to upgrade your projects or just pull them transitively from respective latest Spring Boot patch versions!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The Release Candidate is available from the &lt;a href="https://repo.spring.io/milestone/" class="bare"&gt;https://repo.spring.io/milestone/&lt;/a&gt; repository:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="groovy"&gt;compile 'org.springframework.integration:spring-integration-core:5.5.0-RC1'&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Here is a highlight of changes made to Spring Integration &lt;code&gt;5.5 RC1&lt;/code&gt; since previously announced &lt;a href="https://spring.io/blog/2021/03/18/spring-integration-5-5-m3-5-4-5-available"&gt;Milestone 3&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A basic support for &lt;a href="https://github.com/spring-projects-experimental/spring-native"&gt;Spring Native&lt;/a&gt; compatibility - a lot of bean definition reflection has been reworked to the functional style, which improves a start up time even for regular JVM application!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WebSocket server endpoint-based channel adapters can now be registered (and removed) at runtime;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;MessageGroup&lt;/code&gt; abstraction has now a &lt;code&gt;condition&lt;/code&gt; property which can be consulted later on instead of the whole group iteration.
The &lt;code&gt;AbstractCorrelatingMessageHandler&lt;/code&gt;, in turn, exposes a &lt;code&gt;BiFunction&amp;lt;Message&amp;lt;?&amp;gt;, String, String&amp;gt; conditionSupplier&lt;/code&gt; to extract possible group condition from the currently processed message;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;DelayHandler&lt;/code&gt; now registers a &lt;code&gt;TransactionSynchronization&lt;/code&gt; to schedule a delay task only when current transaction is committed;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some other bug fixes and minor improvements, including IMAP idle channel adapter race condition, the exception swallowing in the &lt;code&gt;IntegrationReactiveUtils&lt;/code&gt;, the &lt;code&gt;ByteBuffer&lt;/code&gt; cast to &lt;code&gt;Buffer&lt;/code&gt; for Java 8 compatibility.
Many of them have been back-ported to the mentioned above &lt;code&gt;5.3.7&lt;/code&gt; &amp;amp; &lt;code&gt;5.4.6&lt;/code&gt; patch versions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;See &lt;a href="https://docs.spring.io/spring-integration/docs/5.5.0-RC1/reference/html/whats-new.html"&gt;What&amp;#8217;s New&lt;/a&gt; in documentation for more information.
Be sure to consult the &lt;a href="https://github.com/spring-projects/spring-integration/wiki/Spring-Integration-5.4-to-5.5-Migration-Guide"&gt;Migration Guide&lt;/a&gt; since the upgrade may cause some breaking changes!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Any feedback and contributions are welcome while we are heading to &lt;code&gt;GA&lt;/code&gt; in May!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Cheers,&amp;#160;&lt;br&gt;
Artem&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-integration/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-integration/issues"&gt;GitHub Issues&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-integration/blob/master/CONTRIBUTING.adoc"&gt;Contributing&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-integration"&gt;Help&lt;/a&gt; | &lt;a href="https://gitter.im/spring-projects/spring-integration"&gt;Chat&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring for Apache Kafka 2.7.0 Available</title>
    <link rel="alternate" href="https://spring.io/blog/2021/04/14/spring-for-apache-kafka-2-7-0-available" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Gary Russell</name>
    </author>
    <id>tag:spring.io,2021-04-14:4414</id>
    <updated>2021-04-14T17:00:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;I am pleased to announce that Spring for Apache Kafka 2.7.0 is now available.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This release contains a significant enhancement, which is a community contribution.
Failed deliveries can be forwarded to a series of topics for delayed redelivery.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;It is best described with an example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;@RetryableTopic(attempts = "5", backoff = @Backoff(delay = 1000, multiplier = 2.0))
@KafkaListener(id = "sk270", topics = "sk270")
public void listen(String in, @Header(KafkaHeaders.RECEIVED_TOPIC) String topic) {
    LOG.info(in + " from " + topic);
    throw new RuntimeException("test");
}

@DltHandler
public void dlt(String in, @Header(KafkaHeaders.RECEIVED_TOPIC) String topic) {
    LOG.info(in + " from " + topic);
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;With this configuration, the first delivery attempt fails and the record is sent to a topic configured for a 1-second delay. When that delivery fails, the record is sent to a topic with a 2-second delay. When that delivery fails, it goes to a topic with a 4-second delay, then an 8 second delay, and, finally, to a dead letter topic with an (optional) &lt;code&gt;@DltHandler&lt;/code&gt; method.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This allows processing of subsequent records from the same partition while retrying the failed record.
Of course, if strict ordering is needed, then traditional retries should be used.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The framework takes care of provisioning the main and delayed topics.
The consumers on the delayed topics are paused until the current time exceeds the record timestamp plus the delay.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;For information about all changes in this release, see &lt;a href="https://docs.spring.io/spring-kafka/docs/current/reference/html/#whats-new-part"&gt;What&amp;#8217;s New&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="https://spring.io/projects/spring-kafka/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-kafka"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-kafka/issues"&gt;Issues&lt;/a&gt; | &lt;a href="https://docs.spring.io/spring-kafka/docs/2.7.0/reference/html/"&gt;Documentation&lt;/a&gt; | &lt;a href="https://stackoverflow.com/questions/tagged/spring-kafka"&gt;Stack Overflow&lt;/a&gt; | &lt;a href="https://gitter.im/spring-projects/spring-kafka"&gt;Gitter&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Data 2021.0 goes GA</title>
    <link rel="alternate" href="https://spring.io/blog/2021/04/14/spring-data-2021-0-goes-ga" />
    <category term="releases" label="Releases" />
    <author>
      <name>Mark Paluch</name>
    </author>
    <id>tag:spring.io,2021-04-14:4413</id>
    <updated>2021-04-14T12:27:00Z</updated>
    <content type="html">&lt;p&gt;Dear Spring community,&lt;/p&gt;
&lt;p&gt;On behalf of the Spring Data team and our contributors, it is my pleasure to announce that Spring Data &lt;code&gt;2021.0.0&lt;/code&gt; (Codename: &lt;a href="https://github.com/spring-projects/spring-data-commons/wiki/Release-Train-2021.0-%28Pascal%29"&gt;Pascal&lt;/a&gt;) is generally available from Maven Central. This release ships with features, bugfixes, and improvements that contain numerous version and driver upgrades. Note that &lt;a href="https://spring.io/blog/2020/04/07/spring-data-for-apache-solr-discontinued"&gt;Spring Data Solr&lt;/a&gt; is no longer part of the Spring Data Release Train.&lt;/p&gt;
&lt;p&gt;This curated overview summarizes the most significant changes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Introduce &lt;code&gt;deleteAllById&lt;/code&gt; for &lt;code&gt;CrudRepository&lt;/code&gt; and &lt;code&gt;ReactiveCrudRepository&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Use Spring Core JFR (Java Flight Recorder) metrics.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;QueryByExample&lt;/code&gt; for R2DBC and Oracle.&lt;/li&gt;
  &lt;li&gt;Enable type- and refactoring-safe use of &lt;code&gt;KProperty&lt;/code&gt; and &lt;code&gt;KPropertyPath&lt;/code&gt; for property path rendering.&lt;/li&gt;
  &lt;li&gt;Embedded Document support &amp;amp; relaxed Aggregation type checks for MongoDB.&lt;/li&gt;
  &lt;li&gt;Cassandra prepared statements.&lt;/li&gt;
  &lt;li&gt;Repository projections &amp;amp; function execution for Apache Geode.&lt;/li&gt;
  &lt;li&gt;Remove Spring Data Solr from release train.&lt;/li&gt;
  &lt;li&gt;Support for &lt;a href="https://github.com/xmolecules/jmolecules"&gt;jMolecules&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Watch for a blog post series explaining the new and noteworthy items in this release train. Meanwhile, Spring Boot &lt;code&gt;2.5-RC1&lt;/code&gt;, to be released in the next few days, is the easiest way to upgrade Spring Data &lt;code&gt;2021.0.0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We are working towards the next service release &lt;code&gt;2021.0.1&lt;/code&gt;, to be included with Spring Boot 2.5 GA in mid-May. Going forward, the Spring Data team starts shifting its focus towards the next release trains. We expect the &lt;code&gt;2021.1&lt;/code&gt; release train to ship mostly dependency upgrades and a reduced set of new features. The main focus moves towards Spring Data 3.0 in alignment with Spring Framework 6 and Spring Boot 3.0.&lt;/p&gt;
&lt;p&gt;To round things off, here are the links to the individual modules:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Data Commons 2.5 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-commons/2.5.0"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/commons/docs/2.5.0/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/commons/docs/2.5.0/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-commons/releases/tag/2.5.0"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data JDBC 2.2 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-jdbc/2.2.0"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jdbc/docs/2.2.0/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jdbc/docs/2.2.0/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-jdbc/releases/tag/2.2.0"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data JPA 2.5 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-jpa/2.5.0"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jpa/docs/2.5.0/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jpa/docs/2.5.0/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-jpa/releases/tag/2.5.0"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Cassandra 3.2 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-cassandra/3.2.0"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/cassandra/docs/3.2.0/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/cassandra/docs/3.2.0/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-cassandra/releases/tag/3.2.0"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data MongoDB 3.2 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-mongodb/3.2.0"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/mongodb/docs/3.2.0/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/mongodb/docs/3.2.0/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-mongodb/releases/tag/3.2.0"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Neo4j 6.1 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-neo4j/6.1.0"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/neo4j/docs/6.1.0/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/neo4j/docs/6.1.0/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-neo4j/releases/tag/6.1.0"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data KeyValue 2.5 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-keyvalue/2.5.0"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/keyvalue/docs/2.5.0/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/keyvalue/docs/2.5.0/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-keyvalue/releases/tag/2.5.0"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Geode 2.5 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-geode/2.5.0"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/geode/docs/2.5.0/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/geode/docs/2.5.0/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-geode/releases/tag/2.5.0"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data R2DBC 1.3 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-r2dbc/1.3.0"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/r2dbc/docs/1.3.0/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/r2dbc/docs/1.3.0/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-r2dbc/releases/tag/1.3.0"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data LDAP 2.5 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-ldap/2.5.0"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/ldap/docs/2.5.0/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/ldap/docs/2.5.0/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-ldap/releases/tag/2.5.0"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Envers 2.5 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-envers/2.5.0"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/envers/docs/2.5.0/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/envers/docs/2.5.0/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-envers/releases/tag/2.5.0"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data REST 3.5 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-rest-webmvc/3.5.0"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/rest/docs/3.5.0/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/rest/docs/3.5.0/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-rest/releases/tag/3.5.0"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Redis 2.5 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-redis/2.5.0"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/redis/docs/2.5.0/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/redis/docs/2.5.0/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-redis/releases/tag/2.5.0"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Elasticsearch 4.2 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-elasticsearch/4.2.0"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/elasticsearch/docs/4.2.0/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/elasticsearch/docs/4.2.0/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-elasticsearch/releases/tag/4.2.0"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Couchbase 4.2 GA - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-couchbase/4.2.0"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/couchbase/docs/4.2.0/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/couchbase/docs/4.2.0/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-couchbase/releases/tag/4.2.0"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Data Neumann SR9 and 2020.0.8 available</title>
    <link rel="alternate" href="https://spring.io/blog/2021/04/14/spring-data-neumann-sr9-and-2020-0-8-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Mark Paluch</name>
    </author>
    <id>tag:spring.io,2021-04-14:4412</id>
    <updated>2021-04-14T12:24:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team, I’m pleased to announce a Spring Data double release: &lt;code&gt;Neumann SR9&lt;/code&gt; and &lt;code&gt;2020.0.8&lt;/code&gt;. Both releases ship with mostly bug fixes and dependency upgrades. The service releases will be picked up by the upcoming Spring Boot 2.3.10 and 2.4.5 releases, respectively. Finally, here are the links to the documentation, artifacts, and changelogs:&lt;/p&gt;&lt;h1&gt;&lt;a href="#neumann-sr9" class="anchor" name="neumann-sr9"&gt;&lt;/a&gt;Neumann SR9&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Data Commons 2.3.9 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-commons/2.3.9.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/commons/docs/2.3.9.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/commons/docs/2.3.9.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-commons/releases/tag/2.3.9.RELEASE"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data JDBC 2.0.9 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-jdbc/2.0.9.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jdbc/docs/2.0.9.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jdbc/docs/2.0.9.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-jdbc/releases/tag/2.0.9.RELEASE"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data JPA 2.3.9 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-jpa/2.3.9.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jpa/docs/2.3.9.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jpa/docs/2.3.9.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-jpa/releases/tag/2.3.9.RELEASE"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Cassandra 3.0.9 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-cassandra/3.0.9.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/cassandra/docs/3.0.9.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/cassandra/docs/3.0.9.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-cassandra/releases/tag/3.0.9.RELEASE"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data MongoDB 3.0.9 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-mongodb/3.0.9.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/mongodb/docs/3.0.9.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/mongodb/docs/3.0.9.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-mongodb/releases/tag/3.0.9.RELEASE"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Neo4j 5.3.9 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-neo4j/5.3.9.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/neo4j/docs/5.3.9.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/neo4j/docs/5.3.9.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-neo4j/releases/tag/5.3.9.RELEASE"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data KeyValue 2.3.9 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-keyvalue/2.3.9.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/keyvalue/docs/2.3.9.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/keyvalue/docs/2.3.9.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-keyvalue/releases/tag/2.3.9.RELEASE"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Geode 2.3.9 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-geode/2.3.9.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/geode/docs/2.3.9.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/geode/docs/2.3.9.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-geode/releases/tag/2.3.9.RELEASE"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data R2DBC 1.1.9 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-r2dbc/1.1.9.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/r2dbc/docs/1.1.9.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/r2dbc/docs/1.1.9.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-r2dbc/releases/tag/1.1.9.RELEASE"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data LDAP 2.3.9 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-ldap/2.3.9.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/ldap/docs/2.3.9.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/ldap/docs/2.3.9.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-ldap/releases/tag/2.3.9.RELEASE"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Envers 2.3.9 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-envers/2.3.9.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/envers/docs/2.3.9.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/envers/docs/2.3.9.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-envers/releases/tag/2.3.9.RELEASE"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data REST 3.3.9 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-rest-webmvc/3.3.9.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/rest/docs/3.3.9.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/rest/docs/3.3.9.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-rest/releases/tag/3.3.9.RELEASE"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Redis 2.3.9 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-redis/2.3.9.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/redis/docs/2.3.9.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/redis/docs/2.3.9.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-redis/releases/tag/2.3.9.RELEASE"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Elasticsearch 4.0.9 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-elasticsearch/4.0.9.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/elasticsearch/docs/4.0.9.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/elasticsearch/docs/4.0.9.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-elasticsearch/releases/tag/4.0.9.RELEASE"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Couchbase 4.0.9 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-couchbase/4.0.9.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/couchbase/docs/4.0.9.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/couchbase/docs/4.0.9.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-couchbase/releases/tag/4.0.9.RELEASE"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Solr 4.2.9 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-solr/4.2.9.RELEASE"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/solr/docs/4.2.9.RELEASE/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/solr/docs/4.2.9.RELEASE/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-solr/releases/tag/4.2.9.RELEASE"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h1&gt;&lt;a href="#2020-0-8" class="anchor" name="2020-0-8"&gt;&lt;/a&gt;2020.0.8&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Data Commons 2.4.8 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-commons/2.4.8"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/commons/docs/2.4.8/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/commons/docs/2.4.8/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-commons/releases/tag/2.4.8"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data JDBC 2.1.8 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-jdbc/2.1.8"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jdbc/docs/2.1.8/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jdbc/docs/2.1.8/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-jdbc/releases/tag/2.1.8"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data JPA 2.4.8 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-jpa/2.4.8"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jpa/docs/2.4.8/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/jpa/docs/2.4.8/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-jpa/releases/tag/2.4.8"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Cassandra 3.1.8 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-cassandra/3.1.8"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/cassandra/docs/3.1.8/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/cassandra/docs/3.1.8/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-cassandra/releases/tag/3.1.8"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data MongoDB 3.1.8 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-mongodb/3.1.8"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/mongodb/docs/3.1.8/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/mongodb/docs/3.1.8/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-mongodb/releases/tag/3.1.8"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Neo4j 6.0.8 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-neo4j/6.0.8"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/neo4j/docs/6.0.8/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/neo4j/docs/6.0.8/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-neo4j/releases/tag/6.0.8"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data KeyValue 2.4.8 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-keyvalue/2.4.8"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/keyvalue/docs/2.4.8/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/keyvalue/docs/2.4.8/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-keyvalue/releases/tag/2.4.8"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Geode 2.4.8 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-geode/2.4.8"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/geode/docs/2.4.8/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/geode/docs/2.4.8/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-geode/releases/tag/2.4.8"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data R2DBC 1.2.8 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-r2dbc/1.2.8"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/r2dbc/docs/1.2.8/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/r2dbc/docs/1.2.8/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-r2dbc/releases/tag/1.2.8"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data LDAP 2.4.8 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-ldap/2.4.8"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/ldap/docs/2.4.8/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/ldap/docs/2.4.8/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-ldap/releases/tag/2.4.8"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Envers 2.4.8 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-envers/2.4.8"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/envers/docs/2.4.8/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/envers/docs/2.4.8/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-envers/releases/tag/2.4.8"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data REST 3.4.8 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-rest-webmvc/3.4.8"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/rest/docs/3.4.8/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/rest/docs/3.4.8/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-rest/releases/tag/3.4.8"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Redis 2.4.8 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-redis/2.4.8"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/redis/docs/2.4.8/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/redis/docs/2.4.8/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-redis/releases/tag/2.4.8"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Elasticsearch 4.1.8 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-elasticsearch/4.1.8"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/elasticsearch/docs/4.1.8/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/elasticsearch/docs/4.1.8/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-elasticsearch/releases/tag/4.1.8"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Couchbase 4.1.8 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-couchbase/4.1.8"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/couchbase/docs/4.1.8/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/couchbase/docs/4.1.8/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-couchbase/releases/tag/4.1.8"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Solr 4.3.8 - &lt;a href="https://repo.spring.io/libs-release/org/springframework/data/spring-data-solr/4.3.8"&gt;Artifacts&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/solr/docs/4.3.8/api"&gt;Javadoc&lt;/a&gt; - &lt;a href="https://docs.spring.io/spring-data/solr/docs/4.3.8/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="https://github.com/spring-projects/spring-data-solr/releases/tag/4.3.8"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - April 13th, 2021</title>
    <link rel="alternate" href="https://spring.io/blog/2021/04/13/this-week-in-spring-april-13th-2021" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2021-04-14:4411</id>
    <updated>2021-04-14T03:39:00Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans! Welcome to yet another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! As usual, we&amp;rsquo;ve got a &lt;em&gt;ton&lt;/em&gt; of stuff to get into so I won&amp;rsquo;t dilly dally too much, but before I get to it I just wanted to remind you that I&amp;rsquo;ll be joining JHipster and founder Microsoft Cloud Developer Advocate Julien Dubois on April 15th (two days from now!) to talk about &lt;a href="https://twitter.com/msdev/status/1382091230008512519?s=12"&gt;Azure Spring Cloud&lt;/a&gt;: don&amp;rsquo;t miss it! &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/04/13/spring-framework-5-3-6-and-5-2-14-available-now"&gt;Spring Framework 5.3.6 and 5.2.14 available now&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/04/08/a-bootiful-podcast-ambassador-labs-devrel-director-infoq-contributor-lifelong-learner-and-awesome-human-and-friend-daniel-bryant"&gt;A Bootiful Podcast: Ambassador Labs devrel director, InfoQ contributor, lifelong learner, and awesome human, and friend Daniel Bryant&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/asirselvasingh/status/1382002413846945797?s=12"&gt;An interesting use case with Azure Spring Cloud and SwissRe&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/spring-projects/spring-boot/commit/c4826c003bd41f46871821c3e1cb4f0d91f19081"&gt;Did you know that there are Bitcoin starters for Spring Boot?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=em6Fb5H6IsM"&gt;I did a talk, Reactive Spring, for the jLove conference a few weeks ago. You might dig it.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/04/13/introducing-spring-cloud-square"&gt;Introducing Spring Cloud Square&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/tiffanyfayj/status/1380612381122826247?s=12"&gt;My team is hiring!&lt;/a&gt; Come work with me and we&amp;rsquo;ll help make the world a better place, one Kubernetes production deploy at a time, at Tanzu.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ably.com/blog/websockets-pubsub-spring-boot"&gt;Reliable WebSockets-based pub/sub with Spring Boot | Ably Blog: Data in Motion&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/semouelhi/status/1381563714525073409?s=12"&gt;This exciting project uses Spring Boot and JHipster and Azure Spring Cloud&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://dzone.com/articles/compiling-kotlin-in-runtime"&gt;This is an older article from last year but it&amp;rsquo;s awesome: Compiling Kotlin at Runtime - DZone Java&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.forbes.com/sites/janakirammsv/2021/04/12/why-kubernetes-developer-ecosystem-needs-a-paas/amp/?__twitter_impression=true"&gt;Why Kubernetes Developer Ecosystem Needs A PaaS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/blog/2021/04/12/introducing-suspended-jobs/"&gt;Blog: Introducing Suspended Jobs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/blog/2021/04/09/kubernetes-release-1.21-cronjob-ga/"&gt;Blog: Kubernetes 1.21: CronJob Reaches GA&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/blog/2021/04/08/kubernetes-1-21-release-announcement/"&gt;Blog: Kubernetes 1.21: Power to the Community&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/blog/2021/04/14/local-storage-features-go-beta/"&gt;Blog: Local Storage: Storage Capacity Tracking, Distributed Provisioning and Generic Ephemeral Volumes hit Beta&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/blog/2021/04/13/kube-state-metrics-v-2-0/"&gt;Blog: kube-state-metrics goes v2.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Introducing Spring Cloud Square</title>
    <link rel="alternate" href="https://spring.io/blog/2021/04/13/introducing-spring-cloud-square" />
    <category term="releases" label="Releases" />
    <author>
      <name>Olga Maciaszek-Sharma</name>
    </author>
    <id>tag:spring.io,2021-04-09:4407</id>
    <updated>2021-04-13T17:24:00Z</updated>
    <content type="html">&lt;p&gt;We are happy to announce that we have released the first publicly available milestone version of the Spring Cloud Square incubator project. The project provides &lt;a href="https://docs.spring.io/spring-cloud-commons/docs/current/reference/html/#spring-cloud-loadbalancer"&gt;Spring Cloud LoadBalancer&lt;/a&gt; integration for &lt;a href="https://square.github.io/okhttp/"&gt;OkHttpClient&lt;/a&gt; and &lt;a href="https://square.github.io/retrofit/"&gt;Retrofit&lt;/a&gt;, as well as non-blocking &lt;a href="https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-webclient"&gt;WebClient&lt;/a&gt;-backed Retrofit clients. Retrofit is a declarative HTTP client from Square.&lt;/p&gt;
&lt;p&gt;You can find more information on how to get started with the project below. You can also check the &lt;a href="https://github.com/spring-cloud-incubator/spring-cloud-square"&gt;project repository&lt;/a&gt; and &lt;a href="https://spring-cloud-incubator.github.io/spring-cloud-square/docs/current/reference/html/index.html"&gt;project documentation&lt;/a&gt; .&lt;/p&gt;&lt;h2&gt;&lt;a href="#okhttpclient-spring-cloud-loadbalancer-integration" class="anchor" name="okhttpclient-spring-cloud-loadbalancer-integration"&gt;&lt;/a&gt;OkHttpClient Spring Cloud LoadBalancer Integration&lt;/h2&gt;
&lt;p&gt;An application interceptor is added to the &lt;code&gt;OkHttpClient&lt;/code&gt; created by auto-configuration. It resolves the scheme, host, and port from Spring Cloud LoadBalancer and rewrites the URL.&lt;/p&gt;
&lt;p&gt;To use SC LoadBalancer to resolve and select instances to send requests to, add the &lt;code&gt;spring-cloud-square-okhttp&lt;/code&gt; dependency to your project:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint xml"&gt;&amp;lt;dependency&amp;gt;&#xD;
		&amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
		&amp;lt;artifactId&amp;gt;spring-cloud-square-okhttp&amp;lt;/artifactId&amp;gt;&#xD;
		&amp;lt;version&amp;gt;0.4.0-M1&amp;lt;/version&amp;gt;&#xD;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then create a &lt;code&gt;@LoadBalanced&lt;/code&gt;-annotated &lt;code&gt;OkHttpClient.Builder&lt;/code&gt; bean:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;@Configuration&#xD;
class OkHttpClientConfig{&#xD;
@Bean&#xD;
@LoadBalanced&#xD;
public OkHttpClient.Builder okHttpClientBuilder() {&#xD;
    return new OkHttpClient.Builder();&#xD;
    }&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you can use the &lt;code&gt;serviceId&lt;/code&gt; or virtual hostname rather than an actual &lt;code&gt;host:port&lt;/code&gt; in your requests. SC LoadBalancer resolves it by selecting one of available service instances.&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;Request request = new Request.Builder()&#xD;
                        .url(&amp;quot;http://serviceId/hello&amp;quot;).build();&#xD;
Response response = builder.build().newCall(request).execute();
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;a href="#retrofit-with-okhttpclient-and-spring-cloud-loadbalancer" class="anchor" name="retrofit-with-okhttpclient-and-spring-cloud-loadbalancer"&gt;&lt;/a&gt;Retrofit with OkHttpClient and Spring Cloud LoadBalancer&lt;/h2&gt;
&lt;p&gt;We also use load-balanced &lt;code&gt;OkHttpClient&lt;/code&gt; instances to run Retrofit calls.&lt;/p&gt;
&lt;p&gt;To use Retrofit with Spring Cloud LoadBalancer-backed &lt;code&gt;OkHttpClient&lt;/code&gt;, add the&lt;br/&gt;&lt;code&gt;spring-cloud-square-retrofit&lt;/code&gt; and &lt;code&gt;spring-cloud-square-okhttp&lt;/code&gt; dependencies to your project:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint xml"&gt;&amp;lt;dependencies&amp;gt;&#xD;
    &amp;lt;dependency&amp;gt;&#xD;
		&amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
		&amp;lt;artifactId&amp;gt;spring-cloud-square-retrofit&amp;lt;/artifactId&amp;gt;&#xD;
		&amp;lt;version&amp;gt;0.4.0-MILESTONE&amp;lt;/version&amp;gt;&#xD;
    &amp;lt;/dependency&amp;gt;&#xD;
    &amp;lt;dependency&amp;gt;&#xD;
		&amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
		&amp;lt;artifactId&amp;gt;spring-cloud-square-okhttp&amp;lt;/artifactId&amp;gt;&#xD;
		&amp;lt;version&amp;gt;0.4.0-MILESTONE&amp;lt;/version&amp;gt;&#xD;
    &amp;lt;/dependency&amp;gt;&#xD;
&amp;lt;/dependencies&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use the &lt;code&gt;@EnableRetrofitClients&lt;/code&gt; annotation to let us automatically instantiate and inject Retrofit clients for you. Then create a &lt;code&gt;@LoadBalanced&lt;/code&gt;-annotated &lt;code&gt;OkHttpClient.Builder&lt;/code&gt; bean to be used under the hood:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;@Configuration&#xD;
@EnableRetrofitClients&#xD;
class OkHttpClientConfig {&#xD;
&#xD;
@Bean&#xD;
@LoadBalanced&#xD;
public OkHttpClient.Builder okHttpClientBuilder() {&#xD;
    return new OkHttpClient.Builder();&#xD;
    }&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Create a Retrofit client and annotate it with &lt;code&gt;@RetrofitClient&lt;/code&gt;, passing the &lt;code&gt;serviceId&lt;/code&gt; of your service as an argument (you can also use the annotation to pass a custom configuration that contains user-crated interceptors for the Retrofit client):&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;@RetrofitClient(&amp;quot;serviceId&amp;quot;)&#xD;
interface HelloClient {&#xD;
	@GET(&amp;quot;/&amp;quot;)&#xD;
	Call&amp;lt;String&amp;gt; hello();&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Make sure to use Retrofit method annotations, such as &lt;code&gt;@GET(&amp;quot;/&amp;quot;)&lt;/code&gt;. You can now inject the Retrofit client and use it to run load-balanced calls (using &lt;code&gt;serviceId&lt;/code&gt; instead of actual &lt;code&gt;host:port&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;class AService {&#xD;
&#xD;
    @Autowired&#xD;
    HelloClient client;&#xD;
&#xD;
	public String hello() throws IOException {&#xD;
		return client.hello().execute().body();&#xD;
	}&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We created a &lt;a href="https://github.com/spring-cloud-samples/spring-cloud-square-retrofit-web"&gt;full sample for load-balanced-OkHttpClient-based Retrofit clients&lt;/a&gt;.&lt;/p&gt;&lt;h2&gt;&lt;a href="#retrofit-with-webclient-and-spring-cloud-loadbalancer" class="anchor" name="retrofit-with-webclient-and-spring-cloud-loadbalancer"&gt;&lt;/a&gt;Retrofit with WebClient and Spring Cloud LoadBalancer&lt;/h2&gt;
&lt;p&gt;We also use adapters to provide WebClient support for Retrofit.&lt;/p&gt;
&lt;p&gt;To use Retrofit with a Spring Cloud LoadBalancer-backed &lt;code&gt;WebClient&lt;/code&gt;, add the&lt;br/&gt;&lt;code&gt;spring-cloud-square-retrofit&lt;/code&gt; and &lt;code&gt;spring-boot-starter-webflux&lt;/code&gt; starter dependencies to your project:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint xml"&gt;&amp;lt;dependencies&amp;gt;&#xD;
    &amp;lt;dependency&amp;gt;&#xD;
		&amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
		&amp;lt;artifactId&amp;gt;spring-cloud-square-retrofit&amp;lt;/artifactId&amp;gt;&#xD;
		&amp;lt;version&amp;gt;0.4.0-MILESTONE&amp;lt;/version&amp;gt;&#xD;
    &amp;lt;/dependency&amp;gt;&#xD;
    &amp;lt;dependency&amp;gt;&#xD;
    	&amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;&#xD;
    	&amp;lt;artifactId&amp;gt;spring-boot-starter-webflux&amp;lt;/artifactId&amp;gt;&#xD;
    &amp;lt;/dependency&amp;gt;&#xD;
&amp;lt;/dependencies&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use the &lt;code&gt;@EnableRetrofitClients&lt;/code&gt; annotation to let us automatically instantiate and inject Retrofit clients for you. Then create a &lt;a href="https://docs.spring.io/spring-cloud-commons/docs/current/reference/html/#webclinet-loadbalancer-client"&gt;&lt;code&gt;@LoadBalanced&lt;/code&gt;-annotated &lt;code&gt;WebClient.Builder&lt;/code&gt; bean&lt;/a&gt; to be used under the hood:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;@Configuration&#xD;
@EnableRetrofitClients&#xD;
class OkHttpClientConfig {&#xD;
&#xD;
@Bean&#xD;
@LoadBalanced&#xD;
public WebClient.Builder okHttpClientBuilder() {&#xD;
    return WebClient.builder();&#xD;
    }&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Create a Retrofit client and annotate it with &lt;code&gt;@RetrofitClient&lt;/code&gt;, passing the &lt;code&gt;serviceId&lt;/code&gt; of your service as argument:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;@RetrofitClient(&amp;quot;serviceId&amp;quot;)&#xD;
interface HelloClient {&#xD;
	@GET(&amp;quot;/&amp;quot;)&#xD;
	Mono&amp;lt;String&amp;gt; hello();&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Make sure to use Retrofit method annotations, such as &lt;code&gt;@GET(&amp;quot;/&amp;quot;)&lt;/code&gt;. You can now inject the Retrofit client and use it to run load-balanced calls (using &lt;code&gt;serviceId&lt;/code&gt; instead of actual &lt;code&gt;host:port&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;class AService {&#xD;
&#xD;
    @Autowired&#xD;
    HelloClient client;&#xD;
&#xD;
	public String hello() throws IOException {&#xD;
		return client.hello();&#xD;
	}&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We created a &lt;a href="https://github.com/spring-cloud-samples/spring-cloud-square-retrofit-webclient"&gt;full sample for load-balanced-WebClient-based Retrofit clients&lt;/a&gt;.&lt;/p&gt;&lt;h3&gt;&lt;a href="#note" class="anchor" name="note"&gt;&lt;/a&gt;NOTE:&lt;/h3&gt;
&lt;p&gt;As the currently available release is a milestone, you need to add the Spring Milestone repository link to your projects for all the examples presented in this blog entry:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint xml"&gt;&amp;lt;repositories&amp;gt;&#xD;
    &amp;lt;repository&amp;gt;&#xD;
        &amp;lt;id&amp;gt;spring-milestones&amp;lt;/id&amp;gt;&#xD;
        &amp;lt;url&amp;gt;https://repo.spring.io/milestone&amp;lt;/url&amp;gt;&#xD;
    &amp;lt;/repository&amp;gt;&#xD;
&amp;lt;/repositories&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We recommend using dependency management for other Spring Cloud dependencies:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint xml"&gt;&amp;lt;dependencyManagement&amp;gt;&#xD;
		&amp;lt;dependencies&amp;gt;&#xD;
			&amp;lt;dependency&amp;gt;&#xD;
				&amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
				&amp;lt;artifactId&amp;gt;spring-cloud-dependencies&amp;lt;/artifactId&amp;gt;&#xD;
				&amp;lt;version&amp;gt;${spring-cloud.version}&amp;lt;/version&amp;gt;&#xD;
				&amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;&#xD;
				&amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;&#xD;
			&amp;lt;/dependency&amp;gt;&#xD;
		&amp;lt;/dependencies&amp;gt;&#xD;
&amp;lt;/dependencyManagement&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Framework 5.3.6 and 5.2.14 available now</title>
    <link rel="alternate" href="https://spring.io/blog/2021/04/13/spring-framework-5-3-6-and-5-2-14-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>St?phane Nicoll</name>
    </author>
    <id>tag:spring.io,2021-04-13:4410</id>
    <updated>2021-04-13T11:47:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and everyone who has contributed, I am pleased to announce that Spring Framework &lt;code&gt;5.3.6&lt;/code&gt; and &lt;code&gt;5.2.14&lt;/code&gt; are available now.&lt;/p&gt;
&lt;p&gt;Spring Framework &lt;code&gt;5.3.6&lt;/code&gt; includes &lt;a href="https://github.com/spring-projects/spring-framework/releases/tag/v5.3.6"&gt;19 fixes and improvements&lt;/a&gt;. Spring Framework &lt;code&gt;5.2.14&lt;/code&gt; includes &lt;a href="https://github.com/spring-projects/spring-framework/releases/tag/v5.2.14.RELEASE"&gt;11 selected fixes and improvements&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Stay tuned for follow-up Spring Boot releases later this week.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://projects.spring.io/spring-framework/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-framework"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-framework/issues"&gt;Issues&lt;/a&gt; | &lt;a href="https://docs.spring.io/spring-framework/docs/5.3.6/spring-framework-reference"&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Security 5.5.0-RC1 released</title>
    <link rel="alternate" href="https://spring.io/blog/2021/04/12/spring-security-5-5-0-rc1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Josh Cummings</name>
    </author>
    <id>tag:spring.io,2021-04-12:4409</id>
    <updated>2021-04-12T19:22:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;On behalf of the community, I’m pleased to announce the release of Spring Security 5.5.0-RC1!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;In addition to dependency upgrades, bug fixes, and minor enhancements, the release candidate contains a few noteworthy changes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;JWT client authentication support for OAuth 2.0 clients&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JWT bearer authorization grant support for OAuth 2.0 clients&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;AuthorizationManager&lt;/code&gt;, a new authorization API for filter security&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Kotlin coroutine support for reactive method security&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OpenSAML 4 support&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This release candidate is a good opportunity to give feedback before the actual GA release in mid-May. We look forward to hearing from you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;You can find the complete details in the &lt;a href="https://github.com/spring-projects/spring-security/releases/tag/5.5.0-RC1"&gt;release notes&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Security 5.2.10, 5.3.9, and 5.4.6 released</title>
    <link rel="alternate" href="https://spring.io/blog/2021/04/12/spring-security-5-2-10-5-3-9-and-5-4-6-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Josh Cummings</name>
    </author>
    <id>tag:spring.io,2021-04-12:4408</id>
    <updated>2021-04-12T19:06:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;On behalf of the community, I&amp;#8217;m pleased to announce the release of Spring Security 5.2.10 (&lt;a href="https://github.com/spring-projects/spring-security/releases/tag/5.2.10.RELEASE"&gt;release notes&lt;/a&gt;), Spring Security 5.3.9 (&lt;a href="https://github.com/spring-projects/spring-security/releases/tag/5.3.9.RELEASE"&gt;release notes&lt;/a&gt;), and Spring Security 5.4.6 (&lt;a href="https://github.com/spring-projects/spring-security/releases/tag/5.4.6"&gt;release notes&lt;/a&gt;). These releases delivers bug fixes along with some minor improvements. Users are encouraged to update to the latest patch release.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-security/"&gt;Project Site&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/"&gt;Reference&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-security"&gt;Help&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>A Bootiful Podcast: Ambassador Labs devrel director, InfoQ contributor, lifelong learner, and awesome human, and friend Daniel Bryant</title>
    <link rel="alternate" href="https://spring.io/blog/2021/04/08/a-bootiful-podcast-ambassador-labs-devrel-director-infoq-contributor-lifelong-learner-and-awesome-human-and-friend-daniel-bryant" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2021-04-09:4406</id>
    <updated>2021-04-09T03:37:00Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans! In this episode &lt;a href="https://twitter.com/starbuxman"&gt;Josh Long (@starbuxman)&lt;/a&gt; talks to Ambassador Labs devrel director, InfoQ contributor, lifelong learner, and awesome human, and friend &lt;a href="https://twitter.com/danielbryantuk"&gt;Daniel Bryant (@danielbryantuk)&lt;/a&gt;. &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.getambassador.io/developer-office-hours/"&gt;the Ambassador Office Hours&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://tanzu.vmware.com/content/webinars/apr-15-rapid-development-with-azure-spring-cloud-workshop-preview"&gt;Sign up for the Rapid Development with Azure Spring Cloud webinar &lt;/a&gt; that Microsoft&amp;rsquo;s Julien Dubois and I are putting on April 15th, 2021.&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe title="Ambassador Labs devrel director, InfoQ contributor, lifelong learner, and awesome human, and friend Daniel Bryant" allowtransparency="true" height="150" width="100%" style="border: none; min-width: min(100%, 430px);" scrolling="no" data-name="pb-iframe-player" src="https://www.podbean.com/player-v2/?i=t2823-1002c28-pb&amp;from=pb6admin&amp;download=1&amp;share=1&amp;download=1&amp;rtl=0&amp;fonts=Arial&amp;skin=1&amp;btn-skin=7"&gt;&lt;/iframe&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - April 6th, 2021</title>
    <link rel="alternate" href="https://spring.io/blog/2021/04/06/this-week-in-spring-april-6th-2021" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2021-04-06:4405</id>
    <updated>2021-04-06T21:45:00Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans! Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! How are you? I&amp;rsquo;m doing alright, thank you. We&amp;rsquo;ve got a ton of stuff to get to this week so let&amp;rsquo;s dive right in! &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://tanzu.vmware.com/content/webinars/apr-15-rapid-development-with-azure-spring-cloud-workshop-preview"&gt;Join Julien Dubois and me for this look at a rapid development with Azure Spring Cloud&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/04/01/a-bootiful-podcast-springfox-creator-marty-pitt-on-swagger-vyne-and-taxi-lang-and-much-more"&gt;A Bootiful Podcast: SpringFox creator Marty Pitt on Swagger, Vyne and Taxi lang, and much more&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/asirselvasingh/status/1379465799635664898?s=12"&gt;A new Microsoft build of OpenJDK will become the default in Azure&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/04/05/api-rate-limiting-with-spring-cloud-gateway"&gt;API Rate Limiting with Spring Cloud Gateway&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/blog/2021/04/06/podsecuritypolicy-deprecation-past-present-and-future/"&gt;Blog: PodSecurityPolicy Deprecation: Past, Present, and Future&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/jonatan_ivanov/status/1377065666310643714?s=12"&gt;Check out the new release of Spring Cloud SleuthOpenTelemetry support&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.infoq.com/news/2021/04/ki-kotlin-interactive-shell/"&gt;Ki is a New, More Flexible Kotlin Interactive Shell&lt;/a&gt; - I love this!&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/piotr_minkowski/status/1377542707434897408?s=12"&gt;Run Spring Cloud Gateway for Kubernetes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/03/31/spring-data-2021-0-0-rc1-and-2020-0-7-released"&gt;Spring Data 2021.0.0-RC1 and 2020.0.7 released&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.infoq.com/news/2021/03/the-road-to-kotlin-1-5/"&gt;The Road to Kotlin 1.5&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/jonatan_ivanov/status/1377783530311196672?s=12"&gt;Today Spring Cloud Sleuth OpenTelemetry 1.0.0-M7 was released! It contains upgrades for OTel 1.0.1, OTel instrumentation 1.0.1-alpha, updated Spring dependencies and an important bugfix thanks to @MGrzejszczak. Enjoy! :)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/olehdokuka/status/1377177610992508939?s=12"&gt;Wanna join the Reactor team? We&amp;rsquo;re hiring!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=EVkVtYn57qA"&gt;Want to learn more about RSocket Routing and the RSocket broker, check out this episode of Tanzu Code with special guest Oleh Dokuka - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
</feed>
